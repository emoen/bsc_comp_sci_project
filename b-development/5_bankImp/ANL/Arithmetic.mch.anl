(
 (?)
 ;
 (
 (
 (?)
 )
 |
 (
 (?)
 )
 )
 )
;
(?)
;
(?)
;
(?)
;
(?)
;
(gcd , prime , exp)
;
(gcd , prime , exp)
;
(gcd : NAT*NAT --> NAT & exp : NAT*NAT +-> NAT & !(aa , bb).(aa : NAT & bb : NAT1 => exp(aa , bb) = exp(aa , bb-1)*aa & exp(aa , 1) = aa & exp(bb , 0) = 1 & exp(0 , bb) = 0) & prime <: NAT)
;
(gcd : NAT*NAT --> NAT & exp : NAT*NAT +-> NAT & !(aa , bb).(aa : NAT & bb : NAT1 => exp(aa , bb) = exp(aa , bb-1)*aa & exp(aa , 1) = aa & exp(bb , 0) = 1 & exp(0 , bb) = 0) & prime <: NAT)
;
(?)
;
(?)
;
(?)
;
(?)
;
(?)
;
(?)
;
(?)
;
(?)
;
(?)
;
(exp_op)
;
(exp_op)
;
(Arithmetic(?):(?):(?))
;
(
(
 (exp_op)
;
 (? , Val_Op , Det_Op , (rr <-- exp_op(aa , bb)))
;
 (aa , bb)
;
 (rr)
;
 (
 (aa : NAT & bb : NAT)
 |
 (
 (rr := exp(aa , bb))
 )
 )
;
 (
 (aa : NAT & bb : NAT)
 |
 (
 (rr := exp(aa , bb))
 )
 )
)
)
